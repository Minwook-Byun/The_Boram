{"version":3,"sources":["firebase/config.js","hooks/useCollection.js","context/AuthContext.js","hooks/useAuthContext.js","hooks/useFirestore.js","pages/Create/Create.js","components/Avatar.js","components/ProjectList.js","pages/Dashboard/Dashboard.js","pages/Groups/GroupSummary.js","pages/Groups/GroupComments.js","pages/Groups/Groups.js","hooks/useDocument.js","pages/Login/Login.js","hooks/useLogin.js","pages/Signup/Signup.js","hooks/useSignup.js","components/Navbar.js","assets/bible.svg","hooks/useLogout.js","assets/dashboard_icon.svg","assets/add_icon.svg","components/Sidebar.js","components/UserList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","projectAuth","auth","projectStorage","storage","timestamp","Timestamp","useCollection","collection","_query","_orderBy","useState","documents","setDocuments","error","setError","query","useRef","current","orderBy","useEffect","ref","where","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","data","id","console","log","AuthContext","createContext","authReducer","state","action","type","user","payload","authIsReady","AuthContextProvider","children","useReducer","dispatch","unsub","onAuthStateChanged","Provider","value","useAuthContext","context","useContext","Error","initialState","document","isPending","success","firestoreReducer","payloadl","useFirestore","response","isCancelled","setIsCancelled","dispatchIfNotCancelled","addDocument","a","createdAt","fromDate","Date","add","addedDocument","message","deleteDocument","delete","updateDocument","updates","update","updatedDocument","categories","label","Create","name","setName","details","setDetails","dueDate","setDueDate","category","setCategory","assignedUsers","setAssignedUsers","formError","setFormError","history","useHistory","users","setUsers","options","map","displayName","handleSubmit","e","preventDefault","length","assignedUsersList","u","photoURL","createdBy","uid","project","comments","className","onSubmit","onChange","target","required","isMulti","Avatar","src","alt","ProjectList","projects","to","toDate","toDateString","Dashboard","Groupsummary","onClick","GroupComments","res","newComment","setNewComment","commentToAdd","content","Math","random","comment","Groups","setDocument","err","useDocument","useParams","GroupSummary","Login","email","setEmail","password","setPassword","setIsPending","login","signInWithEmailAndPassword","online","useLogin","Singup","setDisplayName","thumbnail","setThumbnail","thumbnailErrorMessage","setThumbnailErrorMessage","signup","createUserWithEmailAndPassword","uploadPath","put","img","getDownloadURL","imgUrl","updateProfile","set","useSignup","selectedFile","files","includes","size","Navbar","logout","signOut","useLogout","Sidebar","exact","DashboardIcon","AddIcon","Userlist","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.641388a5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCBzmYdOmptHUv6swBZt9gt80bnSZ5zCKE\",\r\n  authDomain: \"boramchan-site.firebaseapp.com\",\r\n  projectId: \"boramchan-site\",\r\n  storageBucket: \"boramchan-site.appspot.com\",\r\n  messagingSenderId: \"45202961400\",\r\n  appId: \"1:45202961400:web:fa0e87076f1888c0b05c0d\",\r\n};\r\n\r\n// 파이어베이스 시작!\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// 사용할 서비스 lists\r\nconst projectFirestore = firebase.firestore();\r\nconst projectAuth = firebase.auth();\r\nconst projectStorage = firebase.storage();\r\n\r\n// 타임스탬프\r\nconst timestamp = firebase.firestore.Timestamp;\r\n\r\nexport { projectFirestore, projectAuth, timestamp, projectStorage };\r\n","import { useEffect, useState, useRef } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nexport const useCollection = (collection, _query, _orderBy) => {\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n\n  const query = useRef(_query).current;\n  const orderBy = useRef(_orderBy).current;\n\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection);\n\n    if (query) {\n      ref = ref.where(...query);\n    }\n    if (orderBy) {\n      ref = ref.orderBy(...orderBy);\n    }\n\n    const unsubscribe = ref.onSnapshot(\n      (snapshot) => {\n        let results = [];\n        snapshot.docs.forEach((doc) => {\n          results.push({ ...doc.data(), id: doc.id });\n        });\n\n        setDocuments(results);\n        setError(null);\n      },\n      (error) => {\n        console.log(error);\n        setError(\"could not fetch the data\");\n      }\n    );\n\n    return () => unsubscribe();\n  }, [collection, query, orderBy]);\n\n  return { documents, error };\n};\n","import { createContext, useReducer, useEffect } from 'react'\nimport { projectAuth } from '../firebase/config'\n\nexport const AuthContext = createContext()\n\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state, user: action.payload }\n    case 'LOGOUT':\n      return { ...state, user: null }\n    case 'AUTH_IS_READY':\n      return { user: action.payload, authIsReady: true }\n    default:\n      return state\n  }\n}\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, { \n    user: null,\n    authIsReady: false\n  })\n\n  useEffect(() => {\n    const unsub = projectAuth.onAuthStateChanged(user => {\n      dispatch({ type: 'AUTH_IS_READY', payload: user })\n      unsub()\n    })\n  }, [])\n\n  console.log('AuthContext state:', state)\n  \n  return (\n    <AuthContext.Provider value={{ ...state, dispatch }}>\n      { children }\n    </AuthContext.Provider>\n  )\n\n}","import { AuthContext } from \"../context/AuthContext\"\nimport { useContext } from \"react\"\n\nexport const useAuthContext = () => {\n  const context = useContext(AuthContext)\n\n  if(!context) {\n    throw Error('useAuthContext must be used inside an AuthContextProvider')\n  }\n\n  return context\n}","import { useReducer, useEffect, useState } from \"react\";\nimport { projectFirestore, timestamp } from \"../firebase/config\";\n\nlet initialState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: null,\n};\n\nconst firestoreReducer = (state, action) => {\n  switch (action.type) {\n    case \"IS_PENDING\":\n      return { isPending: true, document: null, success: false, error: null };\n    case \"ADDED_DOCUMENT\":\n      return {\n        isPending: false,\n        document: action.payload,\n        success: true,\n        error: null,\n      };\n    case \"DELETED_DOCUMENT\":\n      return { isPending: false, document: null, success: true, error: null };\n    case \"UPDATED_DOCUMENT\":\n      return {\n        isPending: false,\n        document: action.payloadl,\n        success: true,\n        error: null,\n      };\n    case \"ERROR\":\n      return {\n        isPending: false,\n        document: null,\n        success: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useFirestore = (collection) => {\n  const [response, dispatch] = useReducer(firestoreReducer, initialState);\n  const [isCancelled, setIsCancelled] = useState(false);\n\n  const ref = projectFirestore.collection(collection);\n\n  const dispatchIfNotCancelled = (action) => {\n    if (!isCancelled) {\n      dispatch(action);\n    }\n  };\n\n  const addDocument = async (doc) => {\n    dispatch({ type: \"IS_PENDING\" });\n\n    try {\n      const createdAt = timestamp.fromDate(new Date());\n      const addedDocument = await ref.add({ ...doc, createdAt });\n      dispatchIfNotCancelled({\n        type: \"ADDED_DOCUMENT\",\n        payload: addedDocument,\n      });\n    } catch (err) {\n      dispatchIfNotCancelled({ type: \"ERROR\", payload: err.message });\n    }\n  };\n\n  const deleteDocument = async (id) => {\n    dispatch({ type: \"IS_PENDING\" });\n\n    try {\n      await ref.doc(id).delete();\n      dispatchIfNotCancelled({ type: \"DELETED_DOCUMENT\" });\n    } catch (err) {\n      dispatchIfNotCancelled({ type: \"ERROR\", payload: \"could not delete\" });\n    }\n  };\n\n  // documents 업데이트\n  const updateDocument = async (id, updates) => {\n    dispatch({ type: \"IS_PENDING\" });\n\n    try {\n      const updatedDocument = await ref.doc(id).update(updates);\n      dispatchIfNotCancelled({\n        type: \"UPDATED_DOCUMENT\",\n        payload: updatedDocument,\n      });\n      return updatedDocument;\n    } catch (err) {\n      dispatchIfNotCancelled({ type: \"ERROR\", payload: err.message });\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { addDocument, updateDocument, deleteDocument, response };\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nimport \"./Create.css\";\r\n\r\nimport { timestamp } from \"../../firebase/config\";\r\nimport { useCollection } from \"../../hooks/useCollection\";\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\r\nimport { useFirestore } from \"../../hooks/useFirestore\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst categories = [\r\n  { value: \"개발자\", label: \"개발자\" },\r\n  { value: \"디자인\", label: \"디자인\" },\r\n  { value: \"영업\", label: \"영업\" },\r\n];\r\n\r\nconst Create = () => {\r\n  // 폼의 필드 구성\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [formError, setFormError] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const { documents } = useCollection(\"users\");\r\n  const [users, setUsers] = useState([]);\r\n  const { user } = useAuthContext();\r\n  const { addDocument, response } = useFirestore(\"projects\");\r\n\r\n  // 유저가 변경될 때마다 업데이트가 일어날 수 있도록 useEffect를 사용한다\r\n  useEffect(() => {\r\n    if (documents) {\r\n      const options = documents.map((user) => {\r\n        return { value: user, label: user.displayName };\r\n      });\r\n      setUsers(options);\r\n    }\r\n  }, [documents]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormError(null);\r\n    // 그 뒤로 해줄 것 없으니 return 처리\r\n    if (!category) {\r\n      setFormError(\"카테고리를 선택해주세요\");\r\n      return;\r\n    }\r\n    if (assignedUsers.length < 1) {\r\n      setFormError(\"한 명 이상의 작성자를 선택해주세요!\");\r\n      return;\r\n    }\r\n\r\n    const assignedUsersList = assignedUsers.map((u) => {\r\n      return {\r\n        displayName: u.value.displayName,\r\n        photoURL: u.value.photoURL,\r\n        id: u.value.id,\r\n      };\r\n    });\r\n    const createdBy = {\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      id: user.uid,\r\n    };\r\n\r\n    const project = {\r\n      name,\r\n      details,\r\n      assignedUsersList,\r\n      createdBy,\r\n      category: category.value,\r\n      dueDate: timestamp.fromDate(new Date(dueDate)),\r\n      comments: [],\r\n    };\r\n\r\n    await addDocument(project);\r\n    if (!response.error) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-form\">\r\n      <h2 className=\"page-title\"> 새 프로젝트 생성</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>프로젝트 이름:</span>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>프로젝트 설명:</span>\r\n          <textarea\r\n            type=\"text\"\r\n            onChange={(e) => setDetails(e.target.value)}\r\n            value={details}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>기한:</span>\r\n          <input\r\n            type=\"date\"\r\n            onChange={(e) => setDueDate(e.target.value)}\r\n            value={dueDate}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>구해요: </span>\r\n          <Select\r\n            options={categories}\r\n            onChange={(options) => setCategory(options)}\r\n            // options만 설정하고 만족하면, 반영이 안 돼요!\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>올린 사람</span>\r\n          <Select\r\n            options={users}\r\n            onChange={(options) => setAssignedUsers(options)}\r\n            isMulti\r\n          />\r\n        </label>\r\n        <button className=\"btn\">작성완료</button>\r\n        {formError && <p className=\"error\">{formError}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import \"./Avatar.css\";\r\n\r\nimport React from \"react\";\r\n\r\n// 하드코딩하면 안 됨! 이미지 파일 많아지면 우째!\r\nexport default function Avatar({ src }) {\r\n  return (\r\n    <div className=\"avatar\">\r\n      <img src={src} alt=\"유저의 아바타이미지입니다\" />\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport Avatar from \"../components/Avatar\";\r\n\r\n// styles\r\nimport \"./ProjectList.css\";\r\n\r\nexport default function ProjectList({ projects }) {\r\n  return (\r\n    <div className=\"project-list\">\r\n      {projects.length === 0 && <p>아직 개설된 프로젝트가 없습니다!</p>}\r\n      {projects &&\r\n        projects.map((project) => (\r\n          <Link to={`/groups/${project.id}`} key={project.id}>\r\n            <h4 key={project.id}>{project.name}</h4>\r\n            <p>Due by {project.dueDate?.toDate().toDateString()}</p>\r\n            <div className=\"assigned-to\">\r\n              <p>\r\n                <strong>Assigned to:</strong>\r\n              </p>\r\n              <ul>\r\n                {project.assignedUsersList?.map((user) => (\r\n                  <li key={user.photoURL}>\r\n                    <Avatar src={user.photoURL} />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useCollection } from \"../../hooks/useCollection\";\r\nimport ProjectList from \"../../components/ProjectList\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { documents, error } = useCollection(\"projects\");\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-title\">대쉬보드</h2>\r\n      {error ? <p>{error}</p> : null}\r\n      {documents ? <ProjectList projects={documents} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\r\nimport { useFirestore } from \"../../hooks/useFirestore\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Groupsummary = ({ project }) => {\r\n  const { deleteDocument } = useFirestore(\"projects\");\r\n  const { user } = useAuthContext();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (e) => {\r\n    deleteDocument(project.id);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"project-summary\">\r\n        <h2 className=\"page-title\">{project.name}</h2>\r\n        <p>작성자 : {project.createdBy?.displayName}</p>\r\n        <p className=\"due-date\">\r\n          프로젝트 기한 {project.dueDate.toDate().toDateString()}\r\n        </p>\r\n        <p className=\"details\">{project.details}</p>\r\n        <h4>함께 하는 사람들 : </h4>\r\n        {project.assignedUsersList?.map((user) => (\r\n          <div key={user.id}>\r\n            <Avatar src={user.photoURL} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {user.uid === project.createdBy?.id && (\r\n        <button className=\"btn\" onClick={handleClick}>\r\n          완료된 프로젝트\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groupsummary;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport { timestamp } from \"../../firebase/config\";\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\r\nimport { useFirestore } from \"../../hooks/useFirestore\";\r\n\r\nconst GroupComments = ({ project }) => {\r\n  const { updateDocument, res } = useFirestore(\"projects\");\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const { user } = useAuthContext();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const commentToAdd = {\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      content: newComment,\r\n      createdAt: timestamp.fromDate(new Date()),\r\n      id: Math.random(),\r\n    };\r\n\r\n    await updateDocument(project.id, {\r\n      comments: [...project.comments, commentToAdd],\r\n    });\r\n    await setNewComment(\"\");\r\n  };\r\n  return (\r\n    <div className=\"project-comments\">\r\n      <h4>프로젝트 댓글</h4>\r\n      <ul>\r\n        {project.comments?.length > 0 &&\r\n          project.comments?.map((comment) => (\r\n            <li key={comment.id}>\r\n              <div className=\"comment-author\">\r\n                <Avatar src={comment.photoURL} />\r\n                <p>{comment.displayName}</p>\r\n              </div>\r\n              <div className=\"comment-date\">\r\n                <p>date here</p>\r\n              </div>\r\n              <div className=\"comment-content\">\r\n                <p>{comment.content}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      <form className=\"댓글 추가\" onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>새로운 댓글 추가 : </span>\r\n          <textarea\r\n            required\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            value={newComment}\r\n          />\r\n        </label>\r\n        <button className=\"btn\">댓글 추가</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupComments;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useDocument } from \"../../hooks/useDocument\";\r\n\r\nimport \"./Groups.css\";\r\n\r\n// 컴포넌트\r\nimport GroupSummary from \"./GroupSummary\";\r\nimport GroupComments from \"./GroupComments\";\r\n\r\nconst Groups = () => {\r\n  const { id } = useParams();\r\n  const { document, error } = useDocument(\"projects\", id); //위에서 param 으로 받은 id\r\n\r\n  // conditional 하는 방법 2 여기서 return이 일어나서 더 이상 내려가지 않는다.\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (!document) {\r\n    return <div className=\"loading\">로딩중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-details\">\r\n      {document ? (\r\n        <>\r\n          {/* 안된다면 url도 꼭 살펴보자!  */}\r\n          <GroupSummary project={document} />\r\n          <GroupComments project={document} />\r\n        </>\r\n      ) : (\r\n        <p>데이터 로딩중</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nexport const useDocument = (collection, id) => {\r\n  const [document, setDocument] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // realtime document data\r\n  useEffect(() => {\r\n    const ref = projectFirestore.collection(collection).doc(id);\r\n\r\n    const unsubscribe = ref.onSnapshot(\r\n      (snapshot) => {\r\n        // need to make sure the doc exists & has data\r\n        if (snapshot.data()) {\r\n          setDocument({ ...snapshot.data(), id: snapshot.id });\r\n          setError(null);\r\n        } else {\r\n          setError(\"No such document exists\");\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err.message);\r\n        setError(\"failed to get document\");\r\n      }\r\n    );\r\n\r\n    // unsubscribe on unmount\r\n    return () => unsubscribe();\r\n  }, [collection, id]);\r\n\r\n  return { document, error };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useLogin } from \"../../hooks/useLogin\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { login, isPending, error } = useLogin();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>로그인</h2>\r\n        <label>\r\n          <span>이메일: </span>\r\n          <input\r\n            required\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>비밀번호: </span>\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n        </label>\r\n        {isPending ? (\r\n          <button className=\"btn\">진행중...</button>\r\n        ) : (\r\n          <button className=\"btn\">로그인</button>\r\n        )}\r\n        {error ? <div className=\"error\">{error}</div> : null}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\nimport { projectAuth, projectFirestore } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogin = () => {\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const login = async (email, password) => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      const res = await projectAuth.signInWithEmailAndPassword(email, password);\n\n      // online 상태 업데이트\n      await projectFirestore\n        .collection(\"users\")\n        .doc(res.user.uid)\n        .update({ online: true });\n\n      dispatch({ type: \"LOGIN\", payload: res.user });\n\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { login, isPending, error };\n};\n","import { useState } from \"react\";\r\nimport { useSignup } from \"../../hooks/useSignup\";\r\n\r\n// CSS\r\nimport \"./Signup.css\";\r\n\r\nconst Singup = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [thumbnail, setThumbnail] = useState(null);\r\n  const [thumbnailErrorMessage, setThumbnailErrorMessage] = useState(\"\");\r\n  const { signup, isPending, error } = useSignup();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signup(email, password, displayName, thumbnail);\r\n  };\r\n\r\n  const handleThumFile = (e) => {\r\n    setThumbnail(null); // 이전 파일 초기화\r\n    let selectedFile = e.target.files[0]; //하나만\r\n    console.log(selectedFile);\r\n\r\n    // 예외처리 : 업로드 아예 x한 경우, 이미지가 아닌경우, 사이즈가 over한 경우\r\n    if (!selectedFile) {\r\n      setThumbnailErrorMessage(\"썸네일 이미지를 업로드해주세요🥺\");\r\n      return; // 각각의 에러처리를 독립적으로 하기 위해서 return\r\n    }\r\n    if (!selectedFile.type.includes(\"image\")) {\r\n      setThumbnailErrorMessage(\"흠.. 올리신 파일이 이미지가 아닌 것 같아요!🥺\");\r\n      return; // 각각의 에러처리를 독립적으로 하기 위해서 return\r\n    }\r\n    if (selectedFile.size > 1000000) {\r\n      setThumbnailErrorMessage(\"1000KB 이하의 이미지만 업로드 해주세요!🥺\");\r\n      return; // 각각의 에러처리를 독립적으로 하기 위해서 return\r\n    }\r\n\r\n    setThumbnailErrorMessage(null);\r\n    setThumbnail(selectedFile);\r\n    console.log(\"썸네일 업데이트 완료!\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n      <h2>회원가입</h2>\r\n      <label>\r\n        <span>이메일: </span>\r\n        <input\r\n          required\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>비밀번호: </span>\r\n        <input\r\n          required\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>사용자 이름: </span>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          onChange={(e) => setDisplayName(e.target.value)}\r\n          value={displayName}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>프로필 이미지: </span>\r\n        <input required type=\"file\" onChange={handleThumFile} />\r\n        {thumbnailErrorMessage ? (\r\n          <div className=\"error\">{thumbnailErrorMessage}</div>\r\n        ) : // 정신차리긔 set~으로 하면 아래와 같이 에러가 난다.\r\n        // index.js:1 Warning: Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\r\n        null}\r\n      </label>\r\n      {isPending ? (\r\n        <button className=\"btn\">진행중...</button>\r\n      ) : (\r\n        <button className=\"btn\">제출하기</button>\r\n      )}\r\n      {error ? <div className=\"error\">{error}</div> : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Singup;\r\n","import { useState, useEffect } from \"react\";\nimport {\n  projectAuth,\n  projectStorage,\n  projectFirestore,\n} from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useSignup = () => {\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const signup = async (email, password, displayName, thumbnail) => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      const res = await projectAuth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      if (!res) {\n        throw new Error(\"회원가입을 완료하지 못했습니다\");\n      }\n\n      // 썸네일 이미지 업로드 섬네일s에 유저의 id마다 폴더를 만들어주고 파일의 이름을 통해서 저장해준다.\n      const uploadPath = `thumbnails/${res.user.uid}/${thumbnail.name}`;\n      const img = await projectStorage.ref(uploadPath).put(thumbnail);\n      const imgUrl = await img.ref.getDownloadURL();\n\n      // 사용자 이름 업데이트\n      await res.user.updateProfile({ displayName, photoURL: imgUrl });\n\n      // 유저용 document 만들기 => 컬렉션이 없다면 하나는 만들어줘야 하나??\n      await projectFirestore.collection(\"users\").doc(res.user.uid).set({\n        online: true,\n        displayName: displayName,\n        photoURL: imgUrl,\n      });\n\n      // 로그인 액션 뿌려주기\n      dispatch({ type: \"LOGIN\", payload: res.user });\n\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        console.log(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { signup, error, isPending };\n};\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLogout } from \"../hooks/useLogout\";\r\n\r\n// CSS\r\nimport \"./Navbar.css\";\r\n\r\n// 이미지 파일\r\nimport logo from \"../assets/bible.svg\";\r\n\r\n// hooks\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const { logout, isPending } = useLogout();\r\n  const { user } = useAuthContext();\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        {/* 유저에게 항상 보여줄 부분 */}\r\n        <li className=\"logo\">\r\n          {/* <img src={logo} alt=\"로고 이미지\" /> */}\r\n          <span></span>\r\n        </li>\r\n        {user ? (\r\n          <>\r\n            <li>\r\n              {isPending ? (\r\n                <button className=\"btn\" onClick={logout}>\r\n                  로그아웃 중입니다...\r\n                </button>\r\n              ) : (\r\n                <button className=\"btn\" onClick={logout}>\r\n                  로그아웃\r\n                </button>\r\n              )}\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <li>\r\n              <Link to=\"/login\">로그인🔒</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/signup\">회원가입</Link>\r\n            </li>\r\n          </>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/bible.e2878bb1.svg\";","import { useEffect, useState } from \"react\";\nimport { projectAuth, projectFirestore } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogout = () => {\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch, user } = useAuthContext();\n\n  const logout = async () => {\n    setError(null);\n    setIsPending(true);\n\n    // 로그아웃\n    try {\n      // online 업데이트\n      const { uid } = user;\n      await projectFirestore\n        .collection(\"users\")\n        .doc(uid)\n        .update({ online: false });\n\n      await projectAuth.signOut();\n\n      dispatch({ type: \"LOGOUT\" });\n\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { logout, error, isPending };\n};\n","export default __webpack_public_path__ + \"static/media/dashboard_icon.bc800f3b.svg\";","export default __webpack_public_path__ + \"static/media/add_icon.376e9b6a.svg\";","import { NavLink } from \"react-router-dom\";\r\n\r\n// CSS\r\nimport \"./Sidebar.css\";\r\n// 이미지 파일\r\nimport DashboardIcon from \"../assets/dashboard_icon.svg\";\r\nimport AddIcon from \"../assets/add_icon.svg\";\r\n\r\n// 컴포넌트\r\nimport Avatar from \"../components/Avatar\";\r\n\r\n// hooks\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Sidebar = () => {\r\n  const { user } = useAuthContext();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-content\">\r\n        <div className=\"user\">\r\n          {/* 프랍으로 넘겨주려면 user에서 또 받아와야 한다! */}\r\n          {user ? (\r\n            <>\r\n              <Avatar src={user.photoURL} />\r\n              <p>안녕하세요 {user.displayName}님!</p>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n        <nav className=\"links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                <img src={DashboardIcon} alt=\"대쉬보드 아이콘\" />\r\n                <span>대쉬보드</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/create\">\r\n                <img src={AddIcon} alt=\"프로젝트 추가 아이콘\" />\r\n                <span>새로운 프로젝트</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\n// 스타일\r\nimport \"./UserList.css\";\r\n\r\n// 컴포넌트\r\nimport Avatar from \"../components/Avatar\";\r\n\r\n// hooks\r\nimport { useCollection } from \"../hooks/useCollection\";\r\n\r\nconst Userlist = () => {\r\n  const { error, documents } = useCollection(\"users\");\r\n  return (\r\n    <div className=\"user-list\">\r\n      <h2>모든 유저</h2>\r\n      {error ? <p className=\"error\">{error}</p> : null}\r\n      {documents &&\r\n        documents.map((user) => (\r\n          <div key={user.id} className=\"user-list-item\">\r\n            {user.online ? <span className=\"online-user\"></span> : null}{\" \"}\r\n            {/*  온라인 유저 식별 버튼*/}\r\n            <p>{user.displayName}</p>\r\n            <Avatar src={user.photoURL} />\r\n          </div>\r\n        ))}\r\n\r\n      {/* {documents &&\r\n        documents.map((user) => (\r\n          <div key={user.id} className=\"user-list-item\">\r\n            <span>{user.displayName}</span>\r\n            <Avatar src={user.photoURL} />\r\n          </div>\r\n        ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Userlist;\r\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// 페이지\nimport Create from \"./pages/Create/Create\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Groups from \"./pages/Groups/Groups\";\nimport Login from \"./pages/Login/Login\";\nimport Signup from \"./pages/Signup/Signup\";\n\n// 컴포넌트\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\nimport userList from \"./components/UserList\";\n\n// hooks\nimport { useAuthContext } from \"./hooks/useAuthContext\";\nimport Userlist from \"./components/UserList\";\n\nfunction App() {\n  const { user, authIsReady } = useAuthContext();\n  // authIsReady action의 타입을 통해서 조건부 렌더링해줄 예정\n\n  return (\n    <div className=\"App\">\n      {authIsReady && (\n        <BrowserRouter>\n          <Sidebar />\n          <div className=\"container\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\">\n                {user ? <Dashboard /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/create\">\n                {user ? <Create /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/groups/:id\">\n                {user ? <Groups /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/login\">\n                {user ? <Redirect to=\"/\" /> : <Login />}\n              </Route>\n              <Route path=\"/signup\">\n                {user ? <Redirect to=\"/\" /> : <Signup />}\n              </Route>\n              <Route path=\"/signup\">\n                {user ? <Redirect to=\"/\" /> : <Signup />}\n              </Route>\n            </Switch>\n          </div>\n          {user && <Userlist />}\n        </BrowserRouter>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}